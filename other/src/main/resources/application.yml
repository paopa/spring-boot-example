server:
  port: 8080
info:
  author: pao.s.w
  version: 0.0
spring:
  application:
    name: spring-boot-example-service
  profiles:
    active: simple
  boot:
    admin:
      client:
        url: http://localhost:8081/
        instance:
          metadata:
            name: ${security.user.name}
            password: ${security.user.password}
            role: ${security.user.role}
            tags:
              environment: ${simple.environment}
  security:
    user:
      name: ${security.user.name}
      password: ${security.user.password}
      role: ${security.user.role}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${datasource.url}
    sql-script-encoding: UTF-8
    username: ${datasource.username}
    password: ${datasource.password}
#  jpa:
#    properties:
#      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  cache:
    cache-names: getTime,currentTimeMillis
    caffeine:
      spec: maximumSize=100,expireAfterWrite=5s
  kafka:
    enable: ${kafka-enable}
    producer:
      bootstrap-servers: ${kafka-host}
    consumer:
      bootstrap-servers: ${kafka-host}
      auto-offset-reset: earliest
      enable-auto-commit: true
      group-id: ${kafka-group-id}
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
scheduler.enable: ${scheduler-enable}